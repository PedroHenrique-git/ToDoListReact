{"version":3,"sources":["pages/Index/Index.jsx","App.jsx","index.jsx"],"names":["Index","useState","task","setTask","taskEdit","setTaskEdit","tasks","setTasks","nameTask","useRef","inputEdit","useEffect","savedTasks","localStorage","getItem","JSON","parse","setItem","stringify","checkIfExistsTask","item","findIndex","value","handleSubmit","e","preventDefault","toast","success","error","className","onSubmit","type","placeholder","onChange","target","autoComplete","size","map","index","ref","onBlur","copyState","current","style","display","splice","handleFocusOutEdit","onClick","removeTask","App","ReactDOM","render","document","getElementById"],"mappings":"mQAOe,SAASA,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAAWC,iBAAO,MAClBC,EAAYD,iBAAO,MAEzBE,qBAAU,WACR,IAAMC,EAAaC,aAAaC,QAAQ,SAEpCF,GACFL,EAASQ,KAAKC,MAAMJ,MAErB,IAEHD,qBAAU,WACRE,aAAaI,QAAQ,QAASF,KAAKG,UAAUZ,MAC5C,CAACA,IAEJ,IAAMa,EAAoB,SAACC,GAEzB,OAAe,IADDd,EAAMe,WAAU,SAACC,GAAD,OAAWA,IAAUF,MA6C/CG,EAAe,SAACC,GAxCN,IAACJ,EAyCfI,EAAEC,kBAxCGN,EADUC,EA0CPlB,IAzCwBkB,GAC9Bb,EAAS,GAAD,mBAAKD,GAAL,CAAYc,KACpBjB,EAAQ,IACRuB,IAAMC,QAAQ,8BAEdD,IAAME,MAAM,yCAuChB,OACE,sBAAMC,UAAU,sBAAhB,SACE,yBAASA,UAAU,eAAnB,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,uBAAMC,SAAU,SAACN,GAAD,OAAOD,EAAaC,IAApC,UACE,uBACEO,KAAK,OACLC,YAAY,WACZC,SAAU,SAACT,GAAD,OAAOrB,EAAQqB,EAAEU,OAAOZ,QAClCA,MAAOpB,EACPiC,aAAa,QAEf,wBAAQJ,KAAK,SAAb,SACE,cAAC,IAAD,CAAiBK,KAAM,YAI7B,qBAAKP,UAAU,aAAf,SACGvB,EAAM+B,KAAI,SAACf,EAAOgB,GAAR,OACT,sBAAKT,UAAU,OAAf,UACE,uBACEU,IAAK7B,EACLmB,UAAU,aACVE,KAAK,OACLC,YAAY,YACZQ,OAAQ,kBAlDG,SAACF,GAC1B,IAAMG,EAAS,YAAOnC,GAEtB,IAAKF,GAAYe,EAAkBf,GAMjC,OALAsB,IAAME,MAAM,wCAEZpB,EAASkC,QAAQC,MAAMC,QAAU,aACjClC,EAAUgC,QAAQC,MAAMC,QAAU,QAKpCH,EAAUI,OAAOP,EAAO,EAAGlC,GAC3BG,EAASkC,GACTjC,EAASkC,QAAQC,MAAMC,QAAU,QACjClC,EAAUgC,QAAQC,MAAMC,QAAU,OAClClB,IAAMC,QAAQ,4BAkCcmB,CAAmBR,IACjCL,SAAU,SAACT,GAAD,OAAOnB,EAAYmB,EAAEU,OAAOZ,QACtCa,aAAa,QAEf,mBAAGI,IAAK/B,EAAR,SAAmBc,IACnB,sBAAKO,UAAU,eAAf,UACE,wBAAQE,KAAK,SAASgB,QAAS,kBAnE5B,SAACT,GAClB,IAAMG,EAAS,YAAOnC,GACtBmC,EAAUI,OAAOP,EAAO,GACxB/B,EAASkC,GAgE0CO,CAAWV,IAAhD,SACE,cAAC,IAAD,MAEF,wBAAQP,KAAK,SAASgB,QAAS,kBA/D7CvC,EAASkC,QAAQC,MAAMC,QAAU,YACjClC,EAAUgC,QAAQC,MAAMC,QAAU,UA8DpB,SACE,cAAC,IAAD,WAhBqBtB,eC/F1B,SAAS2B,IACtB,OACE,cAAC,EAAD,I,YCGJC,IAASC,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAACF,EAAD,OAEFG,SAASC,eAAe,W","file":"static/js/main.ad8dc02c.chunk.js","sourcesContent":["import './index.scss';\nimport { RiAddCircleFill } from 'react-icons/ri';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { BsFillTrashFill } from 'react-icons/bs';\nimport { useState, useRef, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function Index() {\n  const [task, setTask] = useState('');\n  const [taskEdit, setTaskEdit] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const nameTask = useRef(null);\n  const inputEdit = useRef(null);\n\n  useEffect(() => {\n    const savedTasks = localStorage.getItem('tasks');\n\n    if (savedTasks) {\n      setTasks(JSON.parse(savedTasks));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const checkIfExistsTask = (item) => {\n    const index = tasks.findIndex((value) => value === item);\n    if (index !== -1) return true;\n    return false;\n  };\n\n  const addTask = (item) => {\n    if (!checkIfExistsTask(item) && item) {\n      setTasks([...tasks, item]);\n      setTask('');\n      toast.success('task created successfully');\n    } else {\n      toast.error('task already exists or invalid value');\n    }\n  };\n\n  const removeTask = (index) => {\n    const copyState = [...tasks];\n    copyState.splice(index, 1);\n    setTasks(copyState);\n  };\n\n  const showInput = () => {\n    nameTask.current.style.display = 'none';\n    inputEdit.current.style.display = 'block';\n  };\n\n  const handleFocusOutEdit = (index) => {\n    const copyState = [...tasks];\n\n    if (!taskEdit || checkIfExistsTask(taskEdit)) {\n      toast.error('task already exists or invalid value');\n\n      nameTask.current.style.display = 'block';\n      inputEdit.current.style.display = 'none';\n\n      return;\n    }\n\n    copyState.splice(index, 1, taskEdit);\n    setTasks(copyState);\n    nameTask.current.style.display = 'block';\n    inputEdit.current.style.display = 'none';\n    toast.success('task edited successfully');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTask(task);\n  };\n\n  return (\n    <main className=\"principal_container\">\n      <section className=\"task_section\">\n        <div className=\"task_section-wrap\">\n          <div className=\"task_form\">\n            <form onSubmit={(e) => handleSubmit(e)}>\n              <input\n                type=\"text\"\n                placeholder=\"add task\"\n                onChange={(e) => setTask(e.target.value)}\n                value={task}\n                autoComplete=\"off\"\n              />\n              <button type=\"submit\">\n                <RiAddCircleFill size={30} />\n              </button>\n            </form>\n          </div>\n          <div className=\"tasks_list\">\n            {tasks.map((value, index) => (\n              <div className=\"task\" key={value}>\n                <input\n                  ref={inputEdit}\n                  className=\"edit_input\"\n                  type=\"text\"\n                  placeholder=\"edit task\"\n                  onBlur={() => handleFocusOutEdit(index)}\n                  onChange={(e) => setTaskEdit(e.target.value)}\n                  autoComplete=\"off\"\n                />\n                <p ref={nameTask}>{value}</p>\n                <div className=\"task_actions\">\n                  <button type=\"button\" onClick={() => removeTask(index)}>\n                    <BsFillTrashFill />\n                  </button>\n                  <button type=\"button\" onClick={() => showInput()}>\n                    <FaRegEdit />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n}\n","import Index from './pages/Index/Index';\n\nexport default function App() {\n  return (\n    <Index />\n  );\n}\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ToastContainer } from 'react-toastify';\nimport App from './App';\nimport './style/index.scss';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <StrictMode>\n    <ToastContainer />\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}